name: Deploy Backend to Fly.io

on:
  push:
    branches:
      - main
    paths:
      - 'backend/**'
      - '.github/workflows/deploy-backend.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'backend/**'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install dependencies
        working-directory: backend
        run: |
          pip install -r requirements.txt
          pip install pytest pytest-asyncio httpx

      - name: Run tests
        working-directory: backend
        run: |
          python -m pytest tests/ -v
        env:
          SECRET_KEY: test-secret-key
          DATABASE_URL: sqlite:///./test.db
          GEMINI_API_KEY: test-key

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Fly CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Deploy to Fly.io
        working-directory: backend
        run: flyctl deploy --remote-only
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
      
      - name: Create Sentry Release (optional)
        if: github.ref == 'refs/heads/main' && secrets.SENTRY_AUTH_TOKEN != ''
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: productinsightai-backend
        with:
          environment: production
          sourcemaps: ./backend
          version: backend-${{ github.sha }}
      
      - name: Health Check
        if: secrets.BACKEND_HEALTH_URL != ''
        env:
          HEALTH_URL: ${{ secrets.BACKEND_HEALTH_URL }}
        run: |
          # Wait for deployment to be ready
          sleep 30
          # Health check against provided URL (e.g., https://<app>.fly.dev/api/health)
          curl -f "$HEALTH_URL" || exit 1
