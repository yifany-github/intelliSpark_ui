# Copy this file to .env and fill in your actual values

# ===========================
# Core Services Configuration
# ===========================

# Database Configuration
# Development: SQLite (local file)
DATABASE_URL=sqlite:///./roleplay_chat.db
# Production: Supabase Postgres (Issue #171)
# DATABASE_URL=postgresql://postgres.PROJECT_REF:PASSWORD@aws-1-ca-central-1.pooler.supabase.com:6543/postgres
# Redis Cache/Queue (Production: Upstash or Redis Cloud)


REDIS_URL=redis://localhost:6379
# Production: REDIS_URL=redis://default:password@hostname:6379

# ===========================
# AI Service Keys
# ===========================

# Gemini AI API Key (required for AI responses)
GEMINI_API_KEY=your_gemini_api_key_here

# Optional: Grok API Key
GROK_API_KEY=your_grok_api_key_here

# ===========================
# Authentication & Security
# ===========================

# JWT Secret Keys
SECRET_KEY=your-jwt-secret-key-here
ADMIN_JWT_SECRET=your-admin-jwt-secret-key-here

# Firebase Configuration
FIREBASE_API_KEY=your-firebase-api-key

# ===========================
# Payment Processing
# ===========================

# Stripe (REQUIRED for production)
STRIPE_SECRET_KEY=sk_test_your_stripe_secret_key_here
STRIPE_WEBHOOK_SECRET=whsec_your_webhook_secret_here

# Stripe Subscription Price IDs (create these in Stripe Dashboard > Products)
# These must match the frontend VITE_STRIPE_PRICE_* variables
STRIPE_PRICE_BASIC=price_xxxxxxxxxxxxxxxxxxxxx
STRIPE_PRICE_PRO=price_xxxxxxxxxxxxxxxxxxxxx
STRIPE_PRICE_PREMIUM=price_xxxxxxxxxxxxxxxxxxxxx

# ===========================
# Assets & CDN Configuration
# ===========================

# AWS S3 for asset storage
AWS_ACCESS_KEY_ID=your_aws_access_key
AWS_SECRET_ACCESS_KEY=your_aws_secret_key
AWS_REGION=us-east-1
S3_BUCKET=your-app-assets

# CloudFront CDN
CLOUDFRONT_DISTRIBUTION_ID=your_distribution_id

# Alternative: Cloudflare R2
# CLOUDFLARE_R2_ACCESS_KEY_ID=your_r2_access_key
# CLOUDFLARE_R2_SECRET_ACCESS_KEY=your_r2_secret_key
# CLOUDFLARE_R2_BUCKET=your-r2-bucket

# ===========================
# App Configuration
# ===========================

# Basic App Settings
DEBUG=true
APP_NAME=ProductInsightAI Backend
PORT=8000

# CORS Configuration (Production: restrict to your domains)
ALLOWED_ORIGINS=http://localhost:5173,http://localhost:3000
# Production: ALLOWED_ORIGINS=https://yourdomain.com,https://www.yourdomain.com

# ===========================
# Observability & Monitoring
# ===========================

# Sentry for error tracking
SENTRY_DSN=your_sentry_dsn_here
SENTRY_ENVIRONMENT=development

# Log Level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# ===========================
# Rate Limiting & Security
# ===========================

# Rate limiting configuration
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=60

# Admin credentials (Legacy - to be replaced with JWT)
ADMIN_PASSWORD=your-secure-admin-password

# ===========================
# Production Deployment Notes
# ===========================
# 
# For Supabase (Database) - Issue #171:
# 1. Create project at supabase.com
# 2. Go to Settings > Database
# 3. Copy "Connection pooling" URI (recommended for production)
# 4. Replace PROJECT_ID and PASSWORD in DATABASE_URL above
# 5. Set in Fly.io: fly secrets set DATABASE_URL="..." -a productinsightai-backend
#
# For Redis (Upstash):
# - Create database at console.upstash.com
# - Copy Redis URL with authentication
#
# For S3 + CloudFront:
# - Create S3 bucket with proper IAM permissions
# - Set up CloudFront distribution pointing to bucket
# - Configure CORS for asset uploads
#
# For Sentry:
# - Create project at sentry.io
# - Get DSN from project settings
